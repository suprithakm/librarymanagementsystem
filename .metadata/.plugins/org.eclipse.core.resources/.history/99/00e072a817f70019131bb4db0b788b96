package com.capgemini.librarymanagementsystem.controller;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.propertyeditors.CustomDateEditor;
import org.springframework.web.bind.WebDataBinder;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.capgemini.librarymanagementsystem.beans.BooksInventory;
import com.capgemini.librarymanagementsystem.beans.BooksRegistration;
import com.capgemini.librarymanagementsystem.beans.BooksTransaction;
import com.capgemini.librarymanagementsystem.service.LibrarianService;
import com.capgemini.librarymanagementsystem.utility.Response;

@RestController
@CrossOrigin(origins="*", allowedHeaders="*",allowCredentials="true")
public class LibrarianController {

	@Autowired
	LibrarianService librarian;

	public void InitBinder(WebDataBinder binder) {
		CustomDateEditor dateEditor=new CustomDateEditor(new SimpleDateFormat("yyyy-MM-dd"), true);
		binder.registerCustomEditor(Date.class,dateEditor);
	}
	
	@PostMapping("addBooks")
	public boolean addBook(@RequestBody BooksInventory book) {
		if(librarian.addBooks(book)) {
			return true;
		}else {
			return false;
		}

	}//end of addBooks

	@PutMapping("updateBooks")
	public boolean updateBooks(@RequestBody BooksInventory book) {
		if(librarian.updateBooks(book)) {
			return true;
		}else {
			return false;
		}

	}//end of updateBooks

	@DeleteMapping("deleteBooks")
	public boolean deleteBooks(String bookId) {
		if(librarian.deleteBooks(bookId)) {
			return true;
		}else {
			return false;
		}

	}//end of deleteBooks

	@GetMapping("showAllIssuedBooks")
	@ResponseBody
	public List<BooksTransaction> showAllIssuedBook(String userId) {
		List<BooksTransaction> bookList=librarian.showAllIssuedBooks(userId);
		return bookList;
	}//end of showAllIssuedBooks



	@GetMapping("showAllRequests")
	@ResponseBody
	public List<BooksRegistration> showAllRequest() {
		List<BooksRegistration> bookList=librarian.showAllRequests();
		return bookList;
	}//end of showAllRequests
	
	
	public BooksTransaction addFine(String registrationId, Date returnDate);
	
	@GetMapping("acceptRequest")
	@ResponseBody
	public BooksTransaction acceptReq(String registrationId) {
		BooksTransaction trans=librarian.acceptRequest(registrationId);
		return trans;
	}
}