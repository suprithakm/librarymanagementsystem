package com.capgemini.librarymanagementsystem.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.ResponseBody;

import com.capgemini.librarymanagementsystem.service.CommonService;

@Controller
public class AdminController {

	@Autowired
	CommonService serviceCommon;
	
	@GetMapping("/login")
	@ResponseBody
	public Response login(int id,String password) {
		
		loginResponse response=new loginResponse();
		Login login=serviceAdmin.login(id, password);
		if(login!=null) {
			response.setStatusCode(201);
			response.setMessage("Success");
			response.setDescription("Employee details successfully");
			//to set all the values
			response.setlogin(login);
		}else {
			response.setStatusCode(401);
			response.setMessage("Failed");
			response.setDescription("Unable to search employee");
		}
		return response;
	}//end of login
	
	}//end of getAllFeedbacks
	
	@PostMapping(path="/addBus",
			consumes = {MediaType.APPLICATION_XML_VALUE, MediaType.APPLICATION_JSON_VALUE}, produces =
				{ MediaType.APPLICATION_JSON_VALUE, MediaType.APPLICATION_XML_VALUE}

			)
	@ResponseBody
	public busResponse addBus(@RequestBody Bus bus) {

		busResponse response=new busResponse();
		if(serviceOwner.addBus(bus)) {
			response.setStatusCode(201);
			response.setMessage("Success");
			response.setDescription("Employee added successfully");
		}else {
			response.setStatusCode(401);
			response.setMessage("Failed");
			response.setDescription("Unable to add employee");
		}
		return response;
	}//end of addBus
	

	@DeleteMapping("/deleteBus/{busId}")
	@ResponseBody
	public busResponse deleteBus(@PathVariable(name="busId") int busId) {
		//map only through some 
		busResponse response=new busResponse();
		if(serviceOwner.deleteBus(busId)) {
			response.setStatusCode(201);
			response.setMessage("Success");
			response.setDescription("Bus deleted successfully");
		}else {
			response.setStatusCode(401);
			response.setMessage("Failed");
			response.setDescription("Unable to delete bus");
		}
		return response;
	}//end of deleteBus
	
	
	@PutMapping("/updateBus")
	public busResponse updateBus(@RequestBody Bus bus) {

		busResponse response=new busResponse();
		
		if(serviceOwner.updateBus(bus)) {
			response.setStatusCode(201);
			response.setMessage("Success");
			response.setDescription("Bus updated successfully");
		}else {
			response.setStatusCode(401);
			response.setMessage("Failed");
			response.setDescription("Unable to update bus record");
		}
		return response;
	}//end of updateBus
	
	
	
}
